<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation=" 
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd" default-autowire="byName">
	
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/images/**" location="/images/"/>
	<mvc:resources mapping="/js/**" location="/js/"/>
	<mvc:resources mapping="/css/**" location="/css/"/>
    
    <mvc:annotation-driven />

	<!-- 
	①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 
    
	-->
    <context:annotation-config/>
	<context:component-scan base-package="com.com.bright.amp.web.controller" />

	<!-- 
	②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，添加拦截器，类级别的处理器映射 
	-->
    <!-- 
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <bean class="com.com.bright.amp.web.util.MyHandlerInterceptor"/>
            </list>
        </property>
	</bean>
     -->
	
	<!-- 
	②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，
	配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射
	-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="cacheSeconds" value="0" />
	    <property name="webBindingInitializer">
	        <bean class="com.com.bright.amp.web.util.MyWebBinding" />
	    </property>
	    <!-- 配置一下对json数据的转换 -->
	    <property name="messageConverters">
	    	<list>
	    		<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	    		<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
	    	</list>
	    </property>
	</bean>
	
	<!-- 
	③：对模型视图名称的解析，即在模型视图名称添加前后缀
	InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="contentType" value="text/html; charset=UTF-8"></property>
		<property name="suffix" value=".html"></property>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="52428800"/>
        <property name="resolveLazily" value="true"/>  
	</bean>
</beans> 